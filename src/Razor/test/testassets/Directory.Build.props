<Project>
  <Import Project="Before.Directory.Build.props" Condition="Exists('Before.Directory.Build.props')" />

  <PropertyGroup>
    <!--
      In the case that a user is building a sample directly the MicrosoftNetCompilersToolsetPackagerVersion will not be provided.
      We'll fall back to whatever the current SDK provides in regards to Roslyn's Microsoft.Net.Compilers.Toolset.
    -->
    <BuildingTestAppsIndependently>false</BuildingTestAppsIndependently>
    <BuildingTestAppsIndependently Condition="'$(MicrosoftNetCompilersToolsetPackageVersion)' == ''">true</BuildingTestAppsIndependently>

    <!-- Do not resolve Reference ItemGroup since it has a different semantic meaning in Razor test apps -->
    <EnableCustomReferenceResolution>false</EnableCustomReferenceResolution>

    <DefaultNetCoreTargetFramework>net5.0</DefaultNetCoreTargetFramework>

    <RepoRoot Condition="'$(BuildingTestAppsIndependently)' == 'true' AND '$(RepoRoot)' == ''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory)..\, 'global.json'))\</RepoRoot>
    <RazorSdkArtifactsDirectory>$(RepoRoot)artifacts\bin\Microsoft.NET.Sdk.Razor\</RazorSdkArtifactsDirectory>
    <BlazorWebAssemblyJSPath>$(MSBuildThisFileDirectory)blazor.webassembly.js</BlazorWebAssemblyJSPath>
  </PropertyGroup>

  <Import Project="$(RepoRoot)eng\Versions.props" />

  <PropertyGroup>
    <!-- Reset version prefix to 1.0.0 for test projects -->
    <VersionPrefix>1.0.0</VersionPrefix>

    <!-- Working around an issue in XDT transforms -->
    <AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel>

    <!-- Turn down the compression level for brotli -->
    <_BlazorBrotliCompressionLevel>NoCompression</_BlazorBrotliCompressionLevel>
  </PropertyGroup>

  <!-- Don't use the server when building in place. This locks up rzc.dll -->
  <PropertyGroup Condition="'$(BinariesRoot)'==''">
    <UseRazorBuildServer>false</UseRazorBuildServer>
  </PropertyGroup>

  <ItemGroup>
    <!-- Have the SDK treat the MvcShim as an MVC assembly -->
    <_MvcAssemblyName Include="Microsoft.AspNetCore.Razor.Test.MvcShim.ClassLib" />
  </ItemGroup>
  <ItemGroup Condition="$(BuildingTestAppsIndependently) == 'false'">
    <PackageReference Include="Microsoft.Net.Compilers.Toolset"
        Version="$(MicrosoftNetCompilersToolsetPackageVersion)"
        PrivateAssets="all"
        IsImplicitlyDefined="true" />
  </ItemGroup>

  <Import Project="$(RepoRoot)src\Razor\Microsoft.NET.Sdk.Razor\src\build\netstandard2.0\Microsoft.NET.Sdk.Razor.props" />
  <Import Project="After.Directory.Build.props" Condition="Exists('After.Directory.Build.props')" />

</Project>
